import os
import time
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters
from handlers.commands import register_command, trip_command, return_command, report_command
from handlers.callbacks import organization_callback
from handlers.menu import handle_main_menu
from utils.database import init_db
from dotenv import load_dotenv
from keep_alive import keep_alive
from scheduler import start_scheduler

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# –ó–∞–ø—É—Å–∫–∞–µ–º Flask‚Äë—Å–µ—Ä–≤–µ—Ä health‚Äëcheck
keep_alive()
time.sleep(3)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    print("‚ùå –û–®–ò–ë–ö–ê: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞")
    exit(1)

async def on_startup(app):
    print("üü¢ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    init_db()

    # –°—Ç—Ä–æ–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = ApplicationBuilder()\
        .token(TOKEN)\
        .post_init(on_startup)\
        .build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers
    app.add_handler(register_command)
    app.add_handler(trip_command)
    app.add_handler(return_command)
    app.add_handler(report_command)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_main_menu))
    app.add_handler(organization_callback)

    # –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–µ–∑–¥–æ–∫
    start_scheduler()

    # –°—Ç–∞—Ä—Ç polling
    print("‚è≥ –ó–∞–ø—É—Å–∫ polling...")
    app.run_polling(
        drop_pending_updates=True,
        allowed_updates=["message", "callback_query"]
    )

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")
    except Exception as e:
        print(f"üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise
